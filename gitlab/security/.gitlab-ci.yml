variables:
  DOCKER_IMAGE: $DOCKER_REPO:$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID
  DOCKER_IMAGE_LATEST: $DOCKER_REPO:$CI_COMMIT_REF_NAME
  DAST_FULL_SCAN_ENABLED: "true"
  DAST_BROWSER_SCAN: "true"

stages:
  - test
  - dast
  - sonarqube_stage
  - notification_success
  - notification_failed
  - dependencycheck
  - notify-dependencycheck

include:
  - template: Jobs/Secret-Detection.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: DAST.gitlab-ci.yml

semgrep-sast:
  variables:
    SAST_ANALYZER_IMAGE_TAG: "3.7"

brakeman-sast:
  variables:
    SAST_ANALYZER_IMAGE_TAG: "3.1.1"

secret_detection:
  variables:
    SECRET_DETECTION_HISTORIC_SCAN: "true"
  artifacts:
    when: always
    expose_as: 'OWASP Dependency Check Report'
    paths:
      - 'gl-secret-detection-report.json'

scan:
  stage: test
  image:
    name: shiftleft/sast-scan
  script:
    - scan --src ${CI_PROJECT_DIR} --type credscan,nodejs,depscan --out_dir ${CI_PROJECT_DIR}/reports
  rules:
    - when: always
  allow_failure: true
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    paths:
      - $CI_PROJECT_DIR/reports/
    when: always

dast:
  dependencies: []

dependencycheck:
  stage: dependencycheck
  image:
    name: owasp/dependency-check
    entrypoint: ['']
  only:
    - develop
  before_script:
    - mkdir data
    - mkdir dependency-check
  script:
    - /usr/share/dependency-check/bin/dependency-check.sh --scan "./" --format ALL --project "$CI_PROJECT_NAME" --failOnCVSS 0 --suppression /suppressions/npm_fp_suppression.xml --suppression /suppressions/npm_na_suppressions.xml
  after_script:
    - echo $CI_JOB_ID > jobid.txt
  allow_failure: true
  artifacts:
    when: always
    expose_as: 'OWASP Dependency Check Report'
    paths:
      - 'dependency-check-report.html'
      - 'dependency-check-report.json'
      - 'jobid.txt'
    expire_in: 4 day
